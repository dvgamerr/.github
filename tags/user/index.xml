<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>user on TOUNO.io</title><link>https://blog.touno.io/tags/user/</link><description>Recent content in user on TOUNO.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Kananek T.</copyright><lastBuildDate>Mon, 28 Dec 2020 06:43:18 +0000</lastBuildDate><atom:link href="https://blog.touno.io/tags/user/index.xml" rel="self" type="application/rss+xml"/><item><title>Key-based Authentication for OpenSSH on Windows</title><link>https://blog.touno.io/2020/12/28/openssh-on-windows/</link><pubDate>Mon, 28 Dec 2020 06:43:18 +0000</pubDate><guid>https://blog.touno.io/2020/12/28/openssh-on-windows/</guid><description>Admin Users
If the user account on the server you are connecting to is in the local Administrators group, the public key must be placed in the C:\ProgramData\ssh\administrators_authorized_keys instead of the user&amp;rsquo;s .ssh folder. Additionally, only the Administrators group and SYSTEM account can have access to that file, for security purposes. After copying your key into the file and saving it, you can use this script to set the correct permissions on it.</description></item><item><title>Create user and root account in mongodb</title><link>https://blog.touno.io/2020/12/08/mongo-shell/</link><pubDate>Tue, 08 Dec 2020 02:13:50 +0000</pubDate><guid>https://blog.touno.io/2020/12/08/mongo-shell/</guid><description>After create mongodb service or run in docker
use admin db.createUser({ user: &amp;#34;root&amp;#34;, pwd: &amp;#34;123123&amp;#34;, roles: [&amp;#34;root&amp;#34;] }) use yourDb db.createUser({ user: &amp;#34;user&amp;#34;, pwd: &amp;#34;123123&amp;#34;, roles: [&amp;#34;readWrite&amp;#34;, &amp;#34;dbOwner&amp;#34;] }) add command mongod --auth authication mongodb
use admin db.auth(&amp;#39;root&amp;#39;,&amp;#39;123123&amp;#39;) # output: 1</description></item></channel></rss>